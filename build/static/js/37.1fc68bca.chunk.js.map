{"version":3,"sources":["components/FileUploader.js","pages/candidate/ReportIssue.js"],"names":["FileUploader","Component","constructor","props","super","handleAcceptedFiles","files","allFiles","this","showPreview","map","file","Object","assign","preview","split","URL","createObjectURL","formattedSize","formatBytes","size","state","selectedFiles","push","setState","onFileUpload","bytes","decimals","dm","i","Math","floor","log","parseFloat","pow","toFixed","bind","render","Fragment","onDrop","acceptedFiles","getRootProps","getInputProps","className","id","f","key","data-dz-thumbnail","alt","name","src","type","to","defaultProps","ReportIssue","subject","body","componentDidMount","db","collection","doc","get","then","res","currentAppNumber","data","current","console","catch","err","sendData","event","preventDefault","set","uid","auth","currentUser","alert","window","location","reload","error","message","sm","xl","row","for","md","placeholder","value","disabled","onChange","e","target","rows","onClick","color"],"mappings":"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","file":"static/js/37.1fc68bca.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Card } from 'reactstrap';\r\nimport Dropzone from 'react-dropzone';\r\n\r\n\r\nclass FileUploader extends Component {\r\n    static defaultProps = {\r\n        showPreview: true,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleAcceptedFiles = this.handleAcceptedFiles.bind(this);\r\n\r\n        this.state = {\r\n            selectedFiles: [],\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Handled the accepted files and shows the preview\r\n     */\r\n    handleAcceptedFiles = (files) => {\r\n        var allFiles = files;\r\n\r\n        if (this.props.showPreview) {\r\n            files.map(file =>\r\n                Object.assign(file, {\r\n                    preview: file['type'].split('/')[0] === 'image' ? URL.createObjectURL(file) : null,\r\n                    formattedSize: this.formatBytes(file.size),\r\n                })\r\n            );\r\n\r\n            allFiles = this.state.selectedFiles;\r\n            allFiles.push(...files);\r\n            this.setState({ selectedFiles: allFiles });\r\n        }\r\n\r\n        if (this.props.onFileUpload) this.props.onFileUpload(allFiles);\r\n    };\r\n\r\n    /**\r\n     * Formats the size\r\n     */\r\n    formatBytes = (bytes, decimals) => {\r\n        if (bytes === 0) return '0 Bytes';\r\n        const k = 1024;\r\n        const dm = decimals < 0 ? 0 : decimals;\r\n        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n\r\n        const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Dropzone onDrop={acceptedFiles => this.handleAcceptedFiles(acceptedFiles)} {...this.props}>\r\n                    {({ getRootProps, getInputProps }) => (\r\n                        <div className=\"dropzone text-center\">\r\n                            <div className=\"dz-message py-5 needsclick\" {...getRootProps()}>\r\n                                <input {...getInputProps()} />\r\n                                <i className=\"h1 text-muted uil-cloud-upload\"></i>\r\n                                <h3>Drop files here or click to upload.</h3>\r\n                                <span className=\"text-muted font-13\">\r\n                                    (This is just a demo dropzone. Selected files are <strong>not</strong> actually\r\n                                    uploaded.)\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </Dropzone>\r\n\r\n                {this.props.showPreview && (\r\n                    <div className=\"dropzone-previews mt-3\" id=\"file-previews\">\r\n                        {this.state.selectedFiles.map((f, i) => {\r\n                            return (\r\n                                <Card\r\n                                    className=\"mt-1 mb-0 shadow-none border dz-processing dz-image-preview dz-success dz-complete\"\r\n                                    key={i + '-file'}>\r\n                                    <div className=\"p-2\">\r\n                                        <Row className=\"align-items-center\">\r\n                                            {f.preview && (\r\n                                                <Col className=\"col-auto\">\r\n                                                    <img\r\n                                                        data-dz-thumbnail=\"\"\r\n                                                        className=\"avatar-sm rounded bg-light\"\r\n                                                        alt={f.name}\r\n                                                        src={f.preview}\r\n                                                    />\r\n                                                </Col>\r\n                                            )}\r\n                                            {!f.preview && (\r\n                                                <Col className=\"col-auto\">\r\n                                                    <div className=\"avatar-sm\">\r\n                                                        <span className=\"avatar-title bg-primary rounded\">\r\n                                                            {f.type.split('/')[0]}\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </Col>\r\n                                            )}\r\n                                            <Col className=\"pl-0\">\r\n                                                <Link to=\"#\" className=\"text-muted font-weight-bold\">\r\n                                                    {f.name}\r\n                                                </Link>\r\n                                                <p className=\"mb-0\">\r\n                                                    <strong>{f.formattedSize}</strong>\r\n                                                </p>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </div>\r\n                                </Card>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                )}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FileUploader;\r\n","import React, { useState } from \"react\";\r\n// import Form1 from \"../other/Form\"\r\n// import { Row, Col } from 'reactstrap';\r\nimport {\r\n\tRow,\r\n\tCol,\r\n\tCard,\r\n\tCardBody,\r\n\tCustomInput,\r\n\tForm,\r\n\tFormGroup,\r\n\tLabel,\r\n\tInput,\r\n\tFormText,\r\n\tButton,\r\n} from \"reactstrap\";\r\n\r\n// import Flatpickr from 'react-flatpickr';\r\n// import Select from 'react-select';\r\n\r\n// import PageTitle from '../../components/PageTitle';\r\n\r\nimport { Component } from \"react\";\r\nimport { Wizard, Steps, Step } from \"react-albus\";\r\nimport MaskedInput from \"react-text-mask\";\r\nimport FileUploader from \"../../components/FileUploader\";\r\n\r\nimport { render } from \"react-dom\";\r\nimport { storage, auth, db } from \"../../helpers/firebase\";\r\nexport default class ReportIssue extends Component {\r\n\tstate = {\r\n\t\tto: \"Admin\",\r\n\t\tsubject: \"\",\r\n\t\tbody: \"\",\r\n\t};\r\n\r\n\tcomponentDidMount = () => {\r\n\t\tdb\r\n\t\t\t.collection(\"Global_Variables\")\r\n\t\t\t.doc(\"currentApplicationNumber\")\r\n\t\t\t.get()\r\n\t\t\t.then((res) => {\r\n\t\t\t\tthis.setState({ currentAppNumber: res.data().current });\r\n\t\t\t\tconsole.log(\"Application No.\", this.state.currentAppNumber);\r\n\t\t\t}).catch = (err) => {\r\n\t\t\tconsole.log(\"error\");\r\n\t\t};\r\n\t};\r\n\r\n\tsendData = (event) => {\r\n\t\tconsole.log(\"sendData function\", this.state);\r\n\r\n\t\tevent.preventDefault();\r\n\t\ttry {\r\n\t\t\tvar data = db.collection(\"Issues\").doc();\r\n\t\t\tdata.set({\r\n\t\t\t\tuid: auth.currentUser.uid,\r\n\t\t\t\tto: this.state.to,\r\n\t\t\t\tsubject: this.state.subject,\r\n\t\t\t\tbody: this.state.body,\r\n\t\t\t});\r\n\t\t\talert(\"Issue Submitted\");\r\n\t\t\twindow.location.reload();\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(\"Issues\");\r\n\t\t\tconsole.log(error);\r\n\t\t\talert(error.message);\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\tconsole.log(this.state);\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Row className=\"page-title align-items-center\">\r\n\t\t\t\t\t<Col sm={4} xl={6}>\r\n\t\t\t\t\t\t<h4 className=\"mb-1 mt-0\">Report Issue</h4>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t\t{/* <h4 className=\"header-title mt-0 mb-4\">Personal Details</h4> */}\r\n\r\n\t\t\t\t\t\t\t\t<FormGroup row>\r\n\t\t\t\t\t\t\t\t\t<Label for=\"exampleEmail\" md={3}>\r\n\t\t\t\t\t\t\t\t\t\tTo\r\n\t\t\t\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t\t\t\t<Col md={9}>\r\n\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"to\"\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"to\"\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"enter email\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.to}\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tto: e.target.value,\r\n\t\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(e.target.value);\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</FormGroup>\r\n\r\n\t\t\t\t\t\t\t\t<FormGroup row>\r\n\t\t\t\t\t\t\t\t\t<Label for=\"phone\" md={3}>\r\n\t\t\t\t\t\t\t\t\t\tSubject\r\n\t\t\t\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t\t\t\t<Col md={9}>\r\n\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"subject\"\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"subject\"\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter Subject\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.subject}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsubject: e.target.value,\r\n\t\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(e.target.value);\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</FormGroup>\r\n\r\n\t\t\t\t\t\t\t\t<FormGroup row>\r\n\t\t\t\t\t\t\t\t\t<Label for=\"phone\" md={3}>\r\n\t\t\t\t\t\t\t\t\t\tBody\r\n\t\t\t\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t\t\t\t<Col md={9}>\r\n\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"textarea\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"body\"\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"body\"\r\n\t\t\t\t\t\t\t\t\t\t\trows=\"10\"\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter Body of the message\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.body}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbody: e.target.value,\r\n\t\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(e.target.value);\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</FormGroup>\r\n\r\n\t\t\t\t\t\t\t\t<ul className=\"list-inline wizard mb-0\">\r\n\t\t\t\t\t\t\t\t\t<li className=\"next list-inline-item float-right\">\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.sendData}\r\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"success\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</CardBody>\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n"],"sourceRoot":""}